<Activity mc:Ignorable="sap sap2010" x:Class="ReadExcelWithCode" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="934,614" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReadExcelWithCode" sap:VirtualizedContainerService.HintSize="493,549" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="FilePathRead" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT" />
      <Variable x:TypeArguments="x:Object" Name="obj" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">FilePathRead</mca:CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">C:\Users\nwubach\Documents\UiPath\ReusableComponentsC#\Data\INPUT FILE.xlsx</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="try&#xA;{&#xA;&#x9;WorkbookApplication excelWb = new WorkbookApplication(filePath, &quot;&quot;, false);&#xA;&#x9;IEnumerable&lt;string&gt; wbSheets = excelWb.GetSheets();&#xA;&#x9;int iteration = 1;&#xA;&#x9;System.Data.DataTable dtTry = new System.Data.DataTable();&#xA;&#x9;&#xA;&#x9;foreach (string sheet in wbSheets)&#xA;&#x9;{&#xA;&#x9;&#x9;Console.WriteLine($&quot;Reading {sheet}&quot;);&#xA;&#x9;&#x9;excelWb.SetSheet(sheet, false);&#xA;&#x9;&#x9;bool isTrue = true;&#xA;&#x9;&#x9;object[,] sheetOutput = excelWb.ReadRange(&quot;A1&quot;, out isTrue);&#xA;&#x9;&#x9;int rowCount = sheetOutput.GetUpperBound(0);&#xA;&#x9;&#x9;int columnCount = sheetOutput.GetUpperBound(1);&#xA;&#x9;&#x9;//dt = sheetOutput.MakeDataTable(true, columnCount, rowCount);&#xA;&#x9;&#x9;Console.WriteLine($&quot;Row count is {rowCount} \nColumn count is {columnCount}&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;if (iteration == 1)&#x9;&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Adding headers...&quot;);&#xA;&#x9;&#x9;&#x9;for (int y = 1; y &lt;= columnCount; y++)&#xA;&#x9;&#x9;&#x9;&#x9;dtTry.Columns.Add((string)sheetOutput[1, y]);&#xA;&#x9;&#x9;&#x9;&#x9;iteration += 1;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;Console.WriteLine(&quot;Adding rows...&quot;);&#xA;&#x9;&#x9;for (int x = 2; x &lt;= rowCount; x++)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;DataRow newRow = dtTry.NewRow();&#xA;&#x9;&#x9;&#x9;for (int y = 1; y &lt;= columnCount; y++)&#xA;&#x9;&#x9;&#x9;&#x9;newRow[y-1] = sheetOutput[x, y];&#xA;&#xA;&#x9;&#x9;&#x9;dtTry.Rows.Add(newRow.ItemArray);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;dt = dtTry;&#xA;}&#xA;&#xA;catch (Exception e)&#xA;{&#xA;&#x9;Console.WriteLine(e.Message);&#xA;}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="431,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="filePath">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">FilePathRead</mca:CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="dt">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">DT</mca:CSharpReference>
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">"Done"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>